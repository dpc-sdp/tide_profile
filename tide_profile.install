<?php

/**
 * @file
 * Tide Profile module install file..
 */

use Drupal\search_api\Item\Field;
use Drupal\workflows\Entity\Workflow;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_install().
 */
function tide_profile_install() {
  // Creates terms for Profile Category vocabulary.
  $vid = 'profile_category';

  $terms = [
    'Change Agent',
    'Local Champion',
    'Trailblazers',
  ];
  foreach ($terms as $term) {
    Term::create([
      'name' => $term,
      'vid' => $vid,
      'parent' => [],
    ])->save();
  }

  // Don't do anything else during config sync.
  if (\Drupal::isConfigSyncing()) {
    return;
  }

  // Enable Editorial workflow if workflow module is enabled.
  $moduleHandler = \Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('workflows')) {
    $editorial_workflow = Workflow::load('editorial');
    if ($editorial_workflow) {
      $editorial_workflow->getTypePlugin()->addEntityTypeAndBundle('node', 'profile');
      $editorial_workflow->save();
    }
  }
}

/**
 * Add Profile fields to search API [SDPA-1705].
 */
function tide_profile_update_8001() {
  $moduleHandler = \Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('tide_search')) {
    $index_storage = \Drupal::entityTypeManager()
      ->getStorage('search_api_index');
    $index = $index_storage->load('node');

    // Index the Introduction field.
    $field_profile_intro = new Field($index, 'field_profile_intro_text');
    $field_profile_intro->setType('text');
    $field_profile_intro->setPropertyPath('field_profile_intro_text');
    $field_profile_intro->setDatasourceId('entity:node');
    $field_profile_intro->setLabel('Profile Introduction Text');
    $index->addField($field_profile_intro);

    // Index field_life_span field.
    $field_life_span = new Field($index, 'field_life_span');
    $field_life_span->setType('string');
    $field_life_span->setPropertyPath('field_life_span');
    $field_life_span->setDatasourceId('entity:node');
    $field_life_span->setLabel('Profile Lifespan');
    $index->addField($field_life_span);

    // Index profile category tid field.
    $field_profile_category = new Field($index, 'field_profile_category');
    $field_profile_category->setType('integer');
    $field_profile_category->setPropertyPath('field_profile_category');
    $field_profile_category->setDatasourceId('entity:node');
    $field_profile_category->setLabel('Profile Category');
    $index->addField($field_profile_category);

    // Index profile category:name field.
    $field_profile_category_name = new Field($index, 'field_profile_category_name');
    $field_profile_category_name->setType('string');
    $field_profile_category_name->setPropertyPath('field_profile_category:entity:name');
    $field_profile_category_name->setDatasourceId('entity:node');
    $field_profile_category_name->setLabel('Profile Category » Taxonomy term » Name');
    $index->addField($field_profile_category_name);

    // Index profile category:uuid field.
    $field_profile_category_uuid = new Field($index, 'field_profile_category_uuid');
    $field_profile_category_uuid->setType('string');
    $field_profile_category_uuid->setPropertyPath('field_profile_category:entity:uuid');
    $field_profile_category_uuid->setDatasourceId('entity:node');
    $field_profile_category_uuid->setLabel('Profile Category » Taxonomy term » UUID');
    $index->addField($field_profile_category_uuid);

    // Index profile expertise tid field.
    $field_profile_expertise = new Field($index, 'field_profile_expertise');
    $field_profile_expertise->setType('integer');
    $field_profile_expertise->setPropertyPath('field_expertise');
    $field_profile_expertise->setDatasourceId('entity:node');
    $field_profile_expertise->setLabel('Profile Expertise');
    $index->addField($field_profile_expertise);

    // Index profile expertise:name field.
    $field_profile_expertise_name = new Field($index, 'field_profile_expertise_name');
    $field_profile_expertise_name->setType('string');
    $field_profile_expertise_name->setPropertyPath('field_expertise:entity:name');
    $field_profile_expertise_name->setDatasourceId('entity:node');
    $field_profile_expertise_name->setLabel('Profile Expertise » Taxonomy term » Name');
    $index->addField($field_profile_expertise_name);

    // Index profile expertise:uuid field.
    $field_profile_expertise_uuid = new Field($index, 'field_profile_expertise_uuid');
    $field_profile_expertise_uuid->setType('string');
    $field_profile_expertise_uuid->setPropertyPath('field_expertise:entity:uuid');
    $field_profile_expertise_uuid->setDatasourceId('entity:node');
    $field_profile_expertise_uuid->setLabel('Profile Expertise » Taxonomy term » UUID');
    $index->addField($field_profile_expertise_uuid);

    // Index profile location tid field.
    $field_location = new Field($index, 'field_location');
    $field_location->setType('integer');
    $field_location->setPropertyPath('field_location');
    $field_location->setDatasourceId('entity:node');
    $field_location->setLabel('Profile Location');
    $index->addField($field_location);

    // Index profile location:name field.
    $field_location_name = new Field($index, 'field_location_name');
    $field_location_name->setType('string');
    $field_location_name->setPropertyPath('field_location:entity:name');
    $field_location_name->setDatasourceId('entity:node');
    $field_location_name->setLabel('Profile Location » Taxonomy term » Name');
    $index->addField($field_location_name);

    // Index profile location:uuid field.
    $field_location_uuid = new Field($index, 'field_location_uuid');
    $field_location_uuid->setType('string');
    $field_location_uuid->setPropertyPath('field_location:entity:uuid');
    $field_location_uuid->setDatasourceId('entity:node');
    $field_location_uuid->setLabel('Profile Location » Taxonomy term » UUID');
    $index->addField($field_location_uuid);

    // Index Induction Year field.
    $field_year = new Field($index, 'field_year');
    $field_year->setType('string');
    $field_year->setPropertyPath('field_year');
    $field_year->setDatasourceId('entity:node');
    $field_year->setLabel('Induction Year');
    $index->addField($field_year);

    $index->save();
  }
}
